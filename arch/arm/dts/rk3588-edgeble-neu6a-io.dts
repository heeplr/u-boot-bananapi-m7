// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2022 Edgeble AI Technologies Pvt. Ltd.
 */

/dts-v1/;
#include "rk3588.dtsi"
#include "rk3588-edgeble-neu6a.dtsi"
#include <dt-bindings/pinctrl/rockchip.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/gpio/gpio.h>

/ {
	model = "Edgeble Neu6A IO Board";
	compatible = "edgeble,neural-compute-module-6a-io",
		     "edgeble,neural-compute-module-6a", "rockchip,rk3588";

	aliases {
		serial2 = &uart2;
	};

	chosen {
		stdout-path = "serial2:1500000n8";
	};

/*
	vcc12v_dcin: vcc12v-dcin {
		u-boot,dm-pre-reloc;
		compatible = "regulator-fixed";
		regulator-name = "vcc12v_dcin";
		regulator-always-on;
		regulator-boot-on;
		regulator-min-microvolt = <12000000>;
		regulator-max-microvolt = <12000000>;
	};
*/
	vcc5v0_sys: vcc5v0-sys {
		u-boot,dm-pre-reloc;
		compatible = "regulator-fixed";
		regulator-name = "vcc5v0_sys";
		regulator-always-on;
		regulator-boot-on;
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		vin-supply = <&vcc12v_dcin>;
	};

	vcc5v0_host: vcc5v0-host-regulator {
		u-boot,dm-pre-reloc;
		compatible = "regulator-fixed";
		regulator-name = "vcc5v0_host";
		regulator-boot-on;
		regulator-always-on;
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		enable-active-high;
		gpio = <&gpio4 RK_PB0 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&vcc5v0_host_en>;
		vin-supply = <&vcc5v0_sys>;
	};
};

&uart2 {
	pinctrl-0 = <&uart2m0_xfer>;
	status = "okay";
};


&pinctrl {
	usb {
		u-boot,dm-pre-reloc;
		vcc5v0_host_en: vcc5v0-host-en {
			u-boot,dm-pre-reloc;
			rockchip,pins = <4 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};
};


// USB20_HOST0 goes to USB2 hub						- u2phy2_host ?
// USB20_HOST1 goes to USB3 port (top USB3 port?)	- ?

// not possible to enable:
// TYPEC0_USB20 goes to USB-C port ()				- u2phy0_otg ?
// TYPEC1_USB20 goes to USB3 port (bottom USB3 port?)


/* USB2 HUB */
&usb_host0_ehci {
	status = "okay";
	u-boot,dm-pre-reloc;
	clocks = <&cru HCLK_HOST0>, <&cru HCLK_HOST_ARB0>, <&u2phy2>;
	clock-names = "usbhost", "arbiter", "utmi";
	companion = <&usb_host0_ohci>;
	phys = <&u2phy2_host>;
	phy-names = "usb2-phy";
};

// TODO check me out
&usb_host0_ohci {
	status = "okay";
	u-boot,dm-pre-reloc;
	clocks = <&cru HCLK_HOST0>, <&cru HCLK_HOST_ARB0>, <&u2phy2>;
	clock-names = "usbhost", "arbiter", "utmi";
	phys = <&u2phy2_host>;
	phy-names = "usb2-phy";
};

// TODO check me out
&usb2phy2_grf {
	status = "okay";
	u-boot,dm-pre-reloc;
};

// TODO pre-alloc _first_ in all of these nodes
// TODO check me out
&u2phy2 {
	status = "okay";
	u-boot,dm-pre-reloc;

	// TODO is this needed ?
	resets = <&cru SRST_OTGPHY_U2_0>, <&cru SRST_P_USB2PHY_U2_0_GRF0>;
	reset-names = "phy", "apb";

	// TODO is this needed ?
	clock-output-names = "usb480m_phy2";
};

// TODO check me out
&u2phy2_host {
	status = "okay";
	// TODO is this needed ?
	phy-supply = <&vcc5v0_host>;
	u-boot,dm-pre-reloc;
};


/* USB20_HOST1 goes to top USB3 port */
&usb_host1_ehci {
	status = "okay";
	u-boot,dm-pre-reloc;
	clocks = <&cru HCLK_HOST1>, <&cru HCLK_HOST_ARB1>, <&u2phy3>;
	clock-names = "usbhost", "arbiter", "utmi";
	companion = <&usb_host1_ohci>;
	phys = <&u2phy3_host>;
	phy-names = "usb2-phy";
};

// TODO check me out
&usb_host1_ohci {
	status = "okay";
	u-boot,dm-pre-reloc;
	clocks = <&cru HCLK_HOST1>, <&cru HCLK_HOST_ARB1>, <&u2phy3>;
	clock-names = "usbhost", "arbiter", "utmi";
	phys = <&u2phy3_host>;
	phy-names = "usb2-phy";
};


// TODO check me out
&usb2phy3_grf {
	status = "okay";
	u-boot,dm-pre-reloc;
};

// TODO pre-alloc _first_ in all of these nodes
// TODO check me out
&u2phy3 {
	status = "okay";
	u-boot,dm-pre-reloc;

	resets = <&cru SRST_OTGPHY_U2_1>, <&cru SRST_P_USB2PHY_U2_1_GRF0>;
	reset-names = "phy", "apb";

	// TODO is this needed ?
	clock-output-names = "usb480m_phy3";
};

// TODO check me out
&u2phy3_host {
	status = "okay";
	// TODO is this needed ?
	phy-supply = <&vcc5v0_host>;
	u-boot,dm-pre-reloc;
};

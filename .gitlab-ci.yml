default:
  image: debian:bullseye-slim

stages:
  - build

build rock-5b:
  stage: build
  variables:
    DEBIAN_FRONTEND: noninteractive
    GIT_SUBMODULE_STRATEGY: normal
    RKBIN_REPO_URL: https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/obbardc/rkbin.git
  before_script:
    - apt update
    - apt install -y bc build-essential device-tree-compiler git python3 wget bison flex python3-setuptools swig python3-dev libssl-dev python3-pyelftools

  script:
    # download rkbin
    - git clone --depth 1 -b master ${RKBIN_REPO_URL} $CI_PROJECT_DIR/../rkbin

    # download compilers
    - mkdir -p $CI_PROJECT_DIR/../toolchain && cd $CI_PROJECT_DIR/../toolchain
    - wget "https://developer.arm.com/-/media/Files/downloads/gnu/12.2.rel1/binrel/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz?rev=6750d007ffbf4134b30ea58ea5bf5223&hash=6C7D2A7C9BD409C42077F203DF120385AEEBB3F5" -O arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
    - tar xf arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz

    # prepare PATH
    - export PATH=$PATH:$CI_PROJECT_DIR/../toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin
    - export CROSS_COMPILE=aarch64-none-linux-gnu-
    - export ARCH=arm64
    - export BL31=../rkbin/bin/rk35/rk3588_bl31_v1.27.elf
    - export ROCKCHIP_TPL=../rkbin/bin/rk35/rk3588_ddr_lp4_2112MHz_lp5_2736MHz_v1.08.bin

    # build
    - cd $CI_PROJECT_DIR
    - make rock5b-rk3588_defconfig
    - make
    - ../rkbin/tools/boot_merger rock5b-rk3588.ini
  artifacts:
    paths:
      - u-boot.itb
      - idbloader.img
      - rock5b-rk3588.bin
